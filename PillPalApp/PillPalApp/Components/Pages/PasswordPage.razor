@page "/update-password"
@inject NavigationManager Navigation
@using PillPalApp.Services
@inject IUserService UserService

<h2 style="text-decoration: underline;">Update Password:</h2>

<div class="form-container">
    <InputText class="input" @bind-Value="username" placeholder="Confirm Username" />
    <InputText class="input" @bind-Value="oldPassword" placeholder="Confirm Old Password" type="password" />
    <InputText class="input" @bind-Value="newPassword" placeholder="Enter New Password" type="password" />

    @if (!string.IsNullOrEmpty(message))
    {
        <p style="color: @(success ? "green" : "red")">@message</p>
    }

    <div class="button-row">
        <button class="cancel-button" @onclick="GoBack">Cancel</button>
        <button class="update-button" @onclick="UpdatePassword">Update</button>
    </div>
</div>

@code {
    private string username;
    private string oldPassword;
    private string newPassword;
    private string message;
    private bool success;

    protected override void OnInitialized()
    {
        var queryParams = Navigation.Uri.Split('?')[1].Split('&');
        foreach (var param in queryParams)
        {
            var keyValue = param.Split('=');
            if (keyValue[0] == "username")
                username = keyValue[1];
        }
    }

    private async Task UpdatePassword()
    {
        var isValid = await UserService.ValidateUser(username, oldPassword);
        if (!isValid)
        {
            message = "Old password is incorrect.";
            success = false;
            return;
        }

        var updated = await UserService.UpdateUser(username, newPassword);
        if (updated)
        {
            message = "Password updated successfully!";
            success = true;
        }
        else
        {
            message = "Failed to update password. Try again.";
            success = false;
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo($"/account?username={username}");
    }
}
